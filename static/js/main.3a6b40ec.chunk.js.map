{"version":3,"sources":["components/Recording.js","components/Header.js","components/Footer.js","components/Button.js","components/About.js","components/Features.js","components/langs.js","components/LangSelect.js","components/Share.js","components/App.js","serviceWorker.js","index.js"],"names":["styles","textAlign","margin","width","height","borderRadius","backgroundColor","padding","boxShadow","Recording","_ref","live","react_default","a","createElement","className","style","Header","href","FontAwesome","require","Footer","name","size","target","title","rel","Date","getFullYear","Button","props","value","onClick","handleClick","About","id","xmlns","fill","y","x","rx","strokeWidth","stroke","d","Features","src","alt","languages","Language","languageCode","Language (English name)","LangSelect","language","langs","handleLangChange","listOfLangs","map","lang","index","key","htmlFor","onChange","Share","text","shareUrl","FacebookShareButton","url","quote","hashtag","FacebookIcon","round","TwitterShareButton","hashtags","TwitterIcon","WhatsappShareButton","separator","WhatsappIcon","EmailShareButton","concat","subject","body","EmailIcon","recognition","window","SpeechRecognition","webkitSpeechRecognition","interimResults","maxAlternatives","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleListen","state","start","onend","stop","console","log","onstart","onresult","e","transcript","Array","from","results","result","join","isFinal","setState","prevState","textarea","includes","handleStart","handleStop","handleCopy","event","targetTextarea","document","querySelector","select","execCommand","handleClear","handleChange","_event$target","defineProperty","copied","_this$state","components_Header","components_Recording","components_LangSelect","components_Button","src_components_Share","components_Features","components_About","components_Footer","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a6b40ec.chunk.js","sourcesContent":["import React from 'react';\n\nconst styles = {\n  textAlign: \"center\",\n  margin: \"0\",\n  width: \"1vmin\",\n  height: \"1vmin\",\n  borderRadius: \"50%\",\n  backgroundColor: \"red\",\n  padding: \"1em\",\n  boxShadow: \"inset 0 0 10px 0 #9caab2, 0 0 15px 5px red\"\n}\n\nconst Recording = ({live}) => (\n  <div className={live ? `Recording pulse` : `Recording`} style={styles}>\n\n  </div>\n);\n\nexport default Recording;\n","import React from \"react\";\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"title\">Vext</h1>\n      <nav className=\"navbar\">\n        <ul>\n          <li><a href=\"#feature\">Features</a></li>\n          <li><a href=\"#about\">About</a></li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css';\n\nvar FontAwesome = require('react-fontawesome');\n\nfunction Footer(){\n    return(\n\n        <footer className=\"footer\">\n          <h2 className=\"creators\">Development Team</h2>\n          <div className=\"profiles\">\n            <div className=\"profile\">\n\n              <FontAwesome\n                className=\"icon\"\n                name=\"github\"\n                size=\"2x\"\n              />\n\n              <p> <a href=\"https://github.com/pablowbk\" target=\"_blank\" title=\"github profile\" rel=\"noopener noreferrer\">Pablo Weisbek</a></p>\n\n          </div>\n\n          <div className=\"profile hemlata\">\n\n            <FontAwesome\n              className=\"icon\"\n              name=\"github\"\n              size=\"2x\"\n            />\n\n           <p>  <a href=\"https://github.com/Hemlatab\" target=\"_blank\" title=\"github profile\" rel=\"noopener noreferrer\">Hemlata Bhundhoo</a></p>\n\n          </div>\n        </div>\n        <br/>\n<a className=\"repo\" href=\"https://github.com/chingu-voyages/v9-geckos-team-04\" target=\"_blank\" rel=\"noopener noreferrer\">Project Github Repo</a>\n          <p className=\"copyright\">Copyright &copy; {new Date().getFullYear()} </p>\n\n        </footer>\n    )\n}\nexport default Footer;\n","import React from 'react';\nimport './Button.css';\n\nfunction Button(props){\n    return (\n      <button\n        value={props.value}\n        onClick={props.handleClick}\n        className={props.styles}>\n        {props.title}\n      </button>\n    );\n}\n\nexport default Button;\n","import React from 'react';\nimport './About.css';\n\n\nfunction About() {\n  return (\n    <section className=\"about-us\" id=\"about\">\n      <h1>About</h1>\n      <p className=\"about-para\">\n        <span>Vext</span> is a web app that uses the <strong>Web Speech API</strong>, that transcribes your voice by just clicking on the 'Start Recording' button. It is mobile/desktop friendly using <strong>Chrome</strong> browser. Check for the social media icons and let people know what your thoughts are.  Don't let any idea slip away, instead capture it with Vext and share it with the world.\n      </p>\n\n      <p className=\"about-para\">\n        Voice recognition, copy text to clipboard, share with social media, Vext is your tool. You can select your language from the dropdown list for better accuracy. Take notes with it, get a class transcribed, there are many possibilities!\n      </p>\n\n      <p className=\"about-para logo\">\n        <a href=\"#top\">\n          <svg width=\"110\" height=\"110\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n              <title>Vext</title>\n              <rect fill=\"none\" id=\"canvas_background\" height=\"112\" width=\"112\" y=\"-1\" x=\"-1\"/>\n            </g>\n            <g>\n              <title>Vext</title>\n              <rect rx=\"7\" id=\"svg_40\" height=\"108\" width=\"108\" y=\"1\" x=\"1\" strokeWidth=\"0\" stroke=\"#000\" fill=\"#6c63ff\"/>\n              <g id=\"svg_1\">\n                <g id=\"svg_2\">\n                  <path fill=\"#ffffff\" id=\"svg_1\" d=\"m40.5,76.75l-4,0l0,14.25c0,4.4 3.6,8 8,8l52,0c4.4,0 8,-3.6 8,-8l0,-72c0,-4.4 -3.6,-8 -8,-8l-52,0c-4.4,0 -8,3.6 -8,8l0,14.25l4,0l0,-14.25c0,-2.21 1.79,-4 4,-4l52,0c2.21,0 4,1.79 4,4l0,72c0,2.21 -1.79,4 -4,4l-52,0c-2.21,0 -4,-1.79 -4,-4l0,-14.25z\"/>\n                </g>\n                <g id=\"svg_4\">\n                  <path fill=\"#ffffff\" id=\"svg_3\" d=\"m44.5,27l52,0c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2l-52,0c-1.1,0 -2,0.9 -2,2s0.9,2 2,2z\"/>\n                </g>\n                <g id=\"svg_6\">\n                  <path fill=\"#ffffff\" id=\"svg_5\" d=\"m98.5,35c0,-1.1 -0.9,-2 -2,-2l-31,0l0,4l31,0c1.1,0 2,-0.9 2,-2z\"/>\n                </g>\n                <g id=\"svg_8\">\n                  <path fill=\"#ffffff\" id=\"svg_7\" d=\"m98.5,45c0,-1.1 -0.9,-2 -2,-2l-26,0l0,4l26,0c1.1,0 2,-0.9 2,-2z\"/>\n                </g>\n                <g id=\"svg_10\">\n                  <path fill=\"#ffffff\" id=\"svg_9\" d=\"m98.5,55c0,-1.1 -0.9,-2 -2,-2l-22,0l0,4l22,0c1.1,0 2,-0.9 2,-2z\"/>\n                </g>\n                <g id=\"svg_12\">\n                  <path fill=\"#ffffff\" id=\"svg_11\" d=\"m98.5,65c0,-1.1 -0.9,-2 -2,-2l-26,0l0,4l26,0c1.1,0 2,-0.9 2,-2z\"/>\n                </g>\n                <g id=\"svg_14\">\n                  <path fill=\"#ffffff\" id=\"svg_13\" d=\"m98.5,75c0,-1.1 -0.9,-2 -2,-2l-31,0l0,4l31,0c1.1,0 2,-0.9 2,-2z\"/>\n                </g>\n                <g id=\"svg_16\">\n                  <path fill=\"#ffffff\" id=\"svg_15\" d=\"m98.5,85c0,-1.1 -0.9,-2 -2,-2l-52,0c-1.1,0 -2,0.9 -2,2s0.9,2 2,2l52,0c1.1,0 2,-0.9 2,-2z\"/>\n                </g>\n                <g id=\"svg_18\">\n                  <rect fill=\"#ffffff\" id=\"svg_17\" height=\"28\" width=\"4\" y=\"41\" x=\"59.5\"/>\n                </g>\n                <g id=\"svg_20\">\n                  <rect fill=\"#ffffff\" id=\"svg_19\" height=\"10\" width=\"4\" y=\"50\" x=\"65.5\"/>\n                </g>\n                <g id=\"svg_22\">\n                  <rect fill=\"#ffffff\" id=\"svg_21\" height=\"44\" width=\"4\" y=\"33\" x=\"53.5\"/>\n                </g>\n                <g id=\"svg_24\">\n                  <rect fill=\"#ffffff\" id=\"svg_23\" height=\"36\" width=\"4\" y=\"37\" x=\"47.5\"/>\n                </g>\n                <g id=\"svg_26\">\n                  <rect fill=\"#ffffff\" id=\"svg_25\" height=\"26\" width=\"4\" y=\"42\" x=\"41.5\"/>\n                </g>\n                <g id=\"svg_28\">\n                  <rect fill=\"#ffffff\" id=\"svg_27\" height=\"17\" width=\"4\" y=\"47\" x=\"35.5\"/>\n                </g>\n                <g id=\"svg_30\">\n                  <rect fill=\"#ffffff\" id=\"svg_29\" height=\"24\" width=\"4\" y=\"43\" x=\"29.5\"/>\n                </g>\n                <g id=\"svg_32\">\n                  <rect fill=\"#ffffff\" id=\"svg_31\" height=\"52\" width=\"4\" y=\"29\" x=\"23.5\"/>\n                </g>\n                <g id=\"svg_34\">\n                  <rect fill=\"#ffffff\" id=\"svg_33\" height=\"42\" width=\"4\" y=\"34\" x=\"17.5\"/>\n                </g>\n                <g id=\"svg_36\">\n                  <rect fill=\"#ffffff\" id=\"svg_35\" height=\"30\" width=\"4\" y=\"40\" x=\"11.5\"/>\n                </g>\n                <g id=\"svg_38\">\n                  <rect fill=\"#ffffff\" id=\"svg_37\" height=\"25\" width=\"4\" y=\"42.5\" x=\"5.5\"/>\n                </g>\n              </g>\n            </g>\n          </svg>\n        </a>\n      </p>\n    </section>\n  )\n}\n\nexport default About;\n","import React from 'react';\nimport './Features.css';\n\nfunction Features() {\n  return (\n    <section className=\"features\" id=\"feature\">\n      <h1>Features</h1>\n      <div className=\"feature-container\">\n        <div className=\"feature-card\">\n          <img src=\"https://img.icons8.com/ios/50/000000/microphone.png\" alt=\"transcribe from microphone\"/>\n          <h2>Speech to text</h2>\n          <p>Your voice transcribed, instantly. Never loose a thought, an idea. Just speak your mind.</p>\n\n        </div>\n        <div className=\"feature-card\">\n          <img src=\"https://img.icons8.com/ios/80/000000/edit-property.png\" alt =\"Copy to Clipboard\"/>\n          <h2>Copy to Clipboard</h2>\n          <p>All your text ready to be copied and pasted wherever you need it. You can even modify it before taking it elsewhere.</p>\n\n        </div>\n        <div className=\"feature-card\">\n          <img src=\"https://img.icons8.com/dotty/80/000000/share.png\" alt=\"Share your thoughts\"/>\n          <h2>Share</h2>\n          <p>Get your voice out there! Share your thougths on Facebook, Twitter, Whatsapp or Email with the world.</p>\n\n        </div>\n      </div>\n    </section>\n  )\n}\n\n\nexport default Features;\n","export const languages = [\n  {\n    \"Language\": \"Afrikaans (Suid-Afrika)\",\n    \"languageCode\": \"af-ZA\",\n    \"Language (English name)\": \"Afrikaans (South Africa)\"\n  },\n  {\n    \"Language\": \"አማርኛ (ኢትዮጵያ)\",\n    \"languageCode\": \"am-ET\",\n    \"Language (English name)\": \"Amharic (Ethiopia)\"\n  },\n  {\n    \"Language\": \"Հայ (Հայաստան)\",\n    \"languageCode\": \"hy-AM\",\n    \"Language (English name)\": \"Armenian (Armenia)\"\n  },\n  {\n    \"Language\": \"Azərbaycan (Azərbaycan)\",\n    \"languageCode\": \"az-AZ\",\n    \"Language (English name)\": \"Azerbaijani (Azerbaijan)\"\n  },\n  {\n    \"Language\": \"Bahasa Indonesia (Indonesia)\",\n    \"languageCode\": \"id-ID\",\n    \"Language (English name)\": \"Indonesian (Indonesia)\"\n  },\n  {\n    \"Language\": \"Bahasa Melayu (Malaysia)\",\n    \"languageCode\": \"ms-MY\",\n    \"Language (English name)\": \"Malay (Malaysia)\"\n  },\n  {\n    \"Language\": \"বাংলা (বাংলাদেশ)\",\n    \"languageCode\": \"bn-BD\",\n    \"Language (English name)\": \"Bengali (Bangladesh)\"\n  },\n  {\n    \"Language\": \"বাংলা (ভারত)\",\n    \"languageCode\": \"bn-IN\",\n    \"Language (English name)\": \"Bengali (India)\"\n  },\n  {\n    \"Language\": \"Català (Espanya)\",\n    \"languageCode\": \"ca-ES\",\n    \"Language (English name)\": \"Catalan (Spain)\"\n  },\n  {\n    \"Language\": \"Čeština (Česká republika)\",\n    \"languageCode\": \"cs-CZ\",\n    \"Language (English name)\": \"Czech (Czech Republic)\"\n  },\n  {\n    \"Language\": \"Dansk (Danmark)\",\n    \"languageCode\": \"da-DK\",\n    \"Language (English name)\": \"Danish (Denmark)\"\n  },\n  {\n    \"Language\": \"Deutsch (Deutschland)\",\n    \"languageCode\": \"de-DE\",\n    \"Language (English name)\": \"German (Germany)\"\n  },\n  {\n    \"Language\": \"English (Australia)\",\n    \"languageCode\": \"en-AU\",\n    \"Language (English name)\": \"English (Australia)\"\n  },\n  {\n    \"Language\": \"English (Canada)\",\n    \"languageCode\": \"en-CA\",\n    \"Language (English name)\": \"English (Canada)\"\n  },\n  {\n    \"Language\": \"English (Ghana)\",\n    \"languageCode\": \"en-GH\",\n    \"Language (English name)\": \"English (Ghana)\"\n  },\n  {\n    \"Language\": \"English (Great Britain)\",\n    \"languageCode\": \"en-GB\",\n    \"Language (English name)\": \"English (United Kingdom)\"\n  },\n  {\n    \"Language\": \"English (India)\",\n    \"languageCode\": \"en-IN\",\n    \"Language (English name)\": \"English (India)\"\n  },\n  {\n    \"Language\": \"English (Ireland)\",\n    \"languageCode\": \"en-IE\",\n    \"Language (English name)\": \"English (Ireland)\"\n  },\n  {\n    \"Language\": \"English (Kenya)\",\n    \"languageCode\": \"en-KE\",\n    \"Language (English name)\": \"English (Kenya)\"\n  },\n  {\n    \"Language\": \"English (New Zealand)\",\n    \"languageCode\": \"en-NZ\",\n    \"Language (English name)\": \"English (New Zealand)\"\n  },\n  {\n    \"Language\": \"English (Nigeria)\",\n    \"languageCode\": \"en-NG\",\n    \"Language (English name)\": \"English (Nigeria)\"\n  },\n  {\n    \"Language\": \"English (Philippines)\",\n    \"languageCode\": \"en-PH\",\n    \"Language (English name)\": \"English (Philippines)\"\n  },\n  {\n    \"Language\": \"English (Singapore)\",\n    \"languageCode\": \"en-SG\",\n    \"Language (English name)\": \"English (Singapore)\"\n  },\n  {\n    \"Language\": \"English (South Africa)\",\n    \"languageCode\": \"en-ZA\",\n    \"Language (English name)\": \"English (South Africa)\"\n  },\n  {\n    \"Language\": \"English (Tanzania)\",\n    \"languageCode\": \"en-TZ\",\n    \"Language (English name)\": \"English (Tanzania)\"\n  },\n  {\n    \"Language\": \"English (United States)\",\n    \"languageCode\": \"en-US\",\n    \"Language (English name)\": \"English (United States)\"\n  },\n  {\n    \"Language\": \"Español (Argentina)\",\n    \"languageCode\": \"es-AR\",\n    \"Language (English name)\": \"Spanish (Argentina)\"\n  },\n  {\n    \"Language\": \"Español (Bolivia)\",\n    \"languageCode\": \"es-BO\",\n    \"Language (English name)\": \"Spanish (Bolivia)\"\n  },\n  {\n    \"Language\": \"Español (Chile)\",\n    \"languageCode\": \"es-CL\",\n    \"Language (English name)\": \"Spanish (Chile)\"\n  },\n  {\n    \"Language\": \"Español (Colombia)\",\n    \"languageCode\": \"es-CO\",\n    \"Language (English name)\": \"Spanish (Colombia)\"\n  },\n  {\n    \"Language\": \"Español (Costa Rica)\",\n    \"languageCode\": \"es-CR\",\n    \"Language (English name)\": \"Spanish (Costa Rica)\"\n  },\n  {\n    \"Language\": \"Español (Ecuador)\",\n    \"languageCode\": \"es-EC\",\n    \"Language (English name)\": \"Spanish (Ecuador)\"\n  },\n  {\n    \"Language\": \"Español (El Salvador)\",\n    \"languageCode\": \"es-SV\",\n    \"Language (English name)\": \"Spanish (El Salvador)\"\n  },\n  {\n    \"Language\": \"Español (España)\",\n    \"languageCode\": \"es-ES\",\n    \"Language (English name)\": \"Spanish (Spain)\"\n  },\n  {\n    \"Language\": \"Español (Estados Unidos)\",\n    \"languageCode\": \"es-US\",\n    \"Language (English name)\": \"Spanish (United States)\"\n  },\n  {\n    \"Language\": \"Español (Guatemala)\",\n    \"languageCode\": \"es-GT\",\n    \"Language (English name)\": \"Spanish (Guatemala)\"\n  },\n  {\n    \"Language\": \"Español (Honduras)\",\n    \"languageCode\": \"es-HN\",\n    \"Language (English name)\": \"Spanish (Honduras)\"\n  },\n  {\n    \"Language\": \"Español (México)\",\n    \"languageCode\": \"es-MX\",\n    \"Language (English name)\": \"Spanish (Mexico)\"\n  },\n  {\n    \"Language\": \"Español (Nicaragua)\",\n    \"languageCode\": \"es-NI\",\n    \"Language (English name)\": \"Spanish (Nicaragua)\"\n  },\n  {\n    \"Language\": \"Español (Panamá)\",\n    \"languageCode\": \"es-PA\",\n    \"Language (English name)\": \"Spanish (Panama)\"\n  },\n  {\n    \"Language\": \"Español (Paraguay)\",\n    \"languageCode\": \"es-PY\",\n    \"Language (English name)\": \"Spanish (Paraguay)\"\n  },\n  {\n    \"Language\": \"Español (Perú)\",\n    \"languageCode\": \"es-PE\",\n    \"Language (English name)\": \"Spanish (Peru)\"\n  },\n  {\n    \"Language\": \"Español (Puerto Rico)\",\n    \"languageCode\": \"es-PR\",\n    \"Language (English name)\": \"Spanish (Puerto Rico)\"\n  },\n  {\n    \"Language\": \"Español (República Dominicana)\",\n    \"languageCode\": \"es-DO\",\n    \"Language (English name)\": \"Spanish (Dominican Republic)\"\n  },\n  {\n    \"Language\": \"Español (Uruguay)\",\n    \"languageCode\": \"es-UY\",\n    \"Language (English name)\": \"Spanish (Uruguay)\"\n  },\n  {\n    \"Language\": \"Español (Venezuela)\",\n    \"languageCode\": \"es-VE\",\n    \"Language (English name)\": \"Spanish (Venezuela)\"\n  },\n  {\n    \"Language\": \"Euskara (Espainia)\",\n    \"languageCode\": \"eu-ES\",\n    \"Language (English name)\": \"Basque (Spain)\"\n  },\n  {\n    \"Language\": \"Filipino (Pilipinas)\",\n    \"languageCode\": \"fil-PH\",\n    \"Language (English name)\": \"Filipino (Philippines)\"\n  },\n  {\n    \"Language\": \"Français (Canada)\",\n    \"languageCode\": \"fr-CA\",\n    \"Language (English name)\": \"French (Canada)\"\n  },\n  {\n    \"Language\": \"Français (France)\",\n    \"languageCode\": \"fr-FR\",\n    \"Language (English name)\": \"French (France)\"\n  },\n  {\n    \"Language\": \"Galego (España)\",\n    \"languageCode\": \"gl-ES\",\n    \"Language (English name)\": \"Galician (Spain)\"\n  },\n  {\n    \"Language\": \"ქართული (საქართველო)\",\n    \"languageCode\": \"ka-GE\",\n    \"Language (English name)\": \"Georgian (Georgia)\"\n  },\n  {\n    \"Language\": \"ગુજરાતી (ભારત)\",\n    \"languageCode\": \"gu-IN\",\n    \"Language (English name)\": \"Gujarati (India)\"\n  },\n  {\n    \"Language\": \"Hrvatski (Hrvatska)\",\n    \"languageCode\": \"hr-HR\",\n    \"Language (English name)\": \"Croatian (Croatia)\"\n  },\n  {\n    \"Language\": \"IsiZulu (Ningizimu Afrika)\",\n    \"languageCode\": \"zu-ZA\",\n    \"Language (English name)\": \"Zulu (South Africa)\"\n  },\n  {\n    \"Language\": \"Íslenska (Ísland)\",\n    \"languageCode\": \"is-IS\",\n    \"Language (English name)\": \"Icelandic (Iceland)\"\n  },\n  {\n    \"Language\": \"Italiano (Italia)\",\n    \"languageCode\": \"it-IT\",\n    \"Language (English name)\": \"Italian (Italy)\"\n  },\n  {\n    \"Language\": \"Jawa (Indonesia)\",\n    \"languageCode\": \"jv-ID\",\n    \"Language (English name)\": \"Javanese (Indonesia)\"\n  },\n  {\n    \"Language\": \"ಕನ್ನಡ (ಭಾರತ)\",\n    \"languageCode\": \"kn-IN\",\n    \"Language (English name)\": \"Kannada (India)\"\n  },\n  {\n    \"Language\": \"ភាសាខ្មែរ (កម្ពុជា)\",\n    \"languageCode\": \"km-KH\",\n    \"Language (English name)\": \"Khmer (Cambodia)\"\n  },\n  {\n    \"Language\": \"ລາວ (ລາວ)\",\n    \"languageCode\": \"lo-LA\",\n    \"Language (English name)\": \"Lao (Laos)\"\n  },\n  {\n    \"Language\": \"Latviešu (latviešu)\",\n    \"languageCode\": \"lv-LV\",\n    \"Language (English name)\": \"Latvian (Latvia)\"\n  },\n  {\n    \"Language\": \"Lietuvių (Lietuva)\",\n    \"languageCode\": \"lt-LT\",\n    \"Language (English name)\": \"Lithuanian (Lithuania)\"\n  },\n  {\n    \"Language\": \"Magyar (Magyarország)\",\n    \"languageCode\": \"hu-HU\",\n    \"Language (English name)\": \"Hungarian (Hungary)\"\n  },\n  {\n    \"Language\": \"മലയാളം (ഇന്ത്യ)\",\n    \"languageCode\": \"ml-IN\",\n    \"Language (English name)\": \"Malayalam (India)\"\n  },\n  {\n    \"Language\": \"मराठी (भारत)\",\n    \"languageCode\": \"mr-IN\",\n    \"Language (English name)\": \"Marathi (India)\"\n  },\n  {\n    \"Language\": \"Nederlands (Nederland)\",\n    \"languageCode\": \"nl-NL\",\n    \"Language (English name)\": \"Dutch (Netherlands)\"\n  },\n  {\n    \"Language\": \"नेपाली (नेपाल)\",\n    \"languageCode\": \"ne-NP\",\n    \"Language (English name)\": \"Nepali (Nepal)\"\n  },\n  {\n    \"Language\": \"Norsk bokmål (Norge)\",\n    \"languageCode\": \"nb-NO\",\n    \"Language (English name)\": \"Norwegian Bokmål (Norway)\"\n  },\n  {\n    \"Language\": \"Polski (Polska)\",\n    \"languageCode\": \"pl-PL\",\n    \"Language (English name)\": \"Polish (Poland)\"\n  },\n  {\n    \"Language\": \"Português (Brasil)\",\n    \"languageCode\": \"pt-BR\",\n    \"Language (English name)\": \"Portuguese (Brazil)\"\n  },\n  {\n    \"Language\": \"Português (Portugal)\",\n    \"languageCode\": \"pt-PT\",\n    \"Language (English name)\": \"Portuguese (Portugal)\"\n  },\n  {\n    \"Language\": \"Română (România)\",\n    \"languageCode\": \"ro-RO\",\n    \"Language (English name)\": \"Romanian (Romania)\"\n  },\n  {\n    \"Language\": \"සිංහල (ශ්රී ලංකාව)\",\n    \"languageCode\": \"si-LK\",\n    \"Language (English name)\": \"Sinhala (Sri Lanka)\"\n  },\n  {\n    \"Language\": \"Slovenčina (Slovensko)\",\n    \"languageCode\": \"sk-SK\",\n    \"Language (English name)\": \"Slovak (Slovakia)\"\n  },\n  {\n    \"Language\": \"Slovenščina (Slovenija)\",\n    \"languageCode\": \"sl-SI\",\n    \"Language (English name)\": \"Slovenian (Slovenia)\"\n  },\n  {\n    \"Language\": \"Urang (Indonesia)\",\n    \"languageCode\": \"su-ID\",\n    \"Language (English name)\": \"Sundanese (Indonesia)\"\n  },\n  {\n    \"Language\": \"Swahili (Tanzania)\",\n    \"languageCode\": \"sw-TZ\",\n    \"Language (English name)\": \"Swahili (Tanzania)\"\n  },\n  {\n    \"Language\": \"Swahili (Kenya)\",\n    \"languageCode\": \"sw-KE\",\n    \"Language (English name)\": \"Swahili (Kenya)\"\n  },\n  {\n    \"Language\": \"Suomi (Suomi)\",\n    \"languageCode\": \"fi-FI\",\n    \"Language (English name)\": \"Finnish (Finland)\"\n  },\n  {\n    \"Language\": \"Svenska (Sverige)\",\n    \"languageCode\": \"sv-SE\",\n    \"Language (English name)\": \"Swedish (Sweden)\"\n  },\n  {\n    \"Language\": \"தமிழ் (இந்தியா)\",\n    \"languageCode\": \"ta-IN\",\n    \"Language (English name)\": \"Tamil (India)\"\n  },\n  {\n    \"Language\": \"தமிழ் (சிங்கப்பூர்)\",\n    \"languageCode\": \"ta-SG\",\n    \"Language (English name)\": \"Tamil (Singapore)\"\n  },\n  {\n    \"Language\": \"தமிழ் (இலங்கை)\",\n    \"languageCode\": \"ta-LK\",\n    \"Language (English name)\": \"Tamil (Sri Lanka)\"\n  },\n  {\n    \"Language\": \"தமிழ் (மலேசியா)\",\n    \"languageCode\": \"ta-MY\",\n    \"Language (English name)\": \"Tamil (Malaysia)\"\n  },\n  {\n    \"Language\": \"తెలుగు (భారతదేశం)\",\n    \"languageCode\": \"te-IN\",\n    \"Language (English name)\": \"Telugu (India)\"\n  },\n  {\n    \"Language\": \"Tiếng Việt (Việt Nam)\",\n    \"languageCode\": \"vi-VN\",\n    \"Language (English name)\": \"Vietnamese (Vietnam)\"\n  },\n  {\n    \"Language\": \"Türkçe (Türkiye)\",\n    \"languageCode\": \"tr-TR\",\n    \"Language (English name)\": \"Turkish (Turkey)\"\n  },\n  {\n    \"Language\": \"اردو (پاکستان)\",\n    \"languageCode\": \"ur-PK\",\n    \"Language (English name)\": \"Urdu (Pakistan)\"\n  },\n  {\n    \"Language\": \"اردو (بھارت)\",\n    \"languageCode\": \"ur-IN\",\n    \"Language (English name)\": \"Urdu (India)\"\n  },\n  {\n    \"Language\": \"Ελληνικά (Ελλάδα)\",\n    \"languageCode\": \"el-GR\",\n    \"Language (English name)\": \"Greek (Greece)\"\n  },\n  {\n    \"Language\": \"Български (България)\",\n    \"languageCode\": \"bg-BG\",\n    \"Language (English name)\": \"Bulgarian (Bulgaria)\"\n  },\n  {\n    \"Language\": \"Русский (Россия)\",\n    \"languageCode\": \"ru-RU\",\n    \"Language (English name)\": \"Russian (Russia)\"\n  },\n  {\n    \"Language\": \"Српски (Србија)\",\n    \"languageCode\": \"sr-RS\",\n    \"Language (English name)\": \"Serbian (Serbia)\"\n  },\n  {\n    \"Language\": \"Українська (Україна)\",\n    \"languageCode\": \"uk-UA\",\n    \"Language (English name)\": \"Ukrainian (Ukraine)\"\n  },\n  {\n    \"Language\": \"עברית (ישראל)\",\n    \"languageCode\": \"he-IL\",\n    \"Language (English name)\": \"Hebrew (Israel)\"\n  },\n  {\n    \"Language\": \"العربية (إسرائيل)\",\n    \"languageCode\": \"ar-IL\",\n    \"Language (English name)\": \"Arabic (Israel)\"\n  },\n  {\n    \"Language\": \"العربية (الأردن)\",\n    \"languageCode\": \"ar-JO\",\n    \"Language (English name)\": \"Arabic (Jordan)\"\n  },\n  {\n    \"Language\": \"العربية (الإمارات)\",\n    \"languageCode\": \"ar-AE\",\n    \"Language (English name)\": \"Arabic (United Arab Emirates)\"\n  },\n  {\n    \"Language\": \"العربية (البحرين)\",\n    \"languageCode\": \"ar-BH\",\n    \"Language (English name)\": \"Arabic (Bahrain)\"\n  },\n  {\n    \"Language\": \"العربية (الجزائر)\",\n    \"languageCode\": \"ar-DZ\",\n    \"Language (English name)\": \"Arabic (Algeria)\"\n  },\n  {\n    \"Language\": \"العربية (السعودية)\",\n    \"languageCode\": \"ar-SA\",\n    \"Language (English name)\": \"Arabic (Saudi Arabia)\"\n  },\n  {\n    \"Language\": \"العربية (العراق)\",\n    \"languageCode\": \"ar-IQ\",\n    \"Language (English name)\": \"Arabic (Iraq)\"\n  },\n  {\n    \"Language\": \"العربية (الكويت)\",\n    \"languageCode\": \"ar-KW\",\n    \"Language (English name)\": \"Arabic (Kuwait)\"\n  },\n  {\n    \"Language\": \"العربية (المغرب)\",\n    \"languageCode\": \"ar-MA\",\n    \"Language (English name)\": \"Arabic (Morocco)\"\n  },\n  {\n    \"Language\": \"العربية (تونس)\",\n    \"languageCode\": \"ar-TN\",\n    \"Language (English name)\": \"Arabic (Tunisia)\"\n  },\n  {\n    \"Language\": \"العربية (عُمان)\",\n    \"languageCode\": \"ar-OM\",\n    \"Language (English name)\": \"Arabic (Oman)\"\n  },\n  {\n    \"Language\": \"العربية (فلسطين)\",\n    \"languageCode\": \"ar-PS\",\n    \"Language (English name)\": \"Arabic (State of Palestine)\"\n  },\n  {\n    \"Language\": \"العربية (قطر)\",\n    \"languageCode\": \"ar-QA\",\n    \"Language (English name)\": \"Arabic (Qatar)\"\n  },\n  {\n    \"Language\": \"العربية (لبنان)\",\n    \"languageCode\": \"ar-LB\",\n    \"Language (English name)\": \"Arabic (Lebanon)\"\n  },\n  {\n    \"Language\": \"العربية (مصر)\",\n    \"languageCode\": \"ar-EG\",\n    \"Language (English name)\": \"Arabic (Egypt)\"\n  },\n  {\n    \"Language\": \"فارسی (ایران)\",\n    \"languageCode\": \"fa-IR\",\n    \"Language (English name)\": \"Persian (Iran)\"\n  },\n  {\n    \"Language\": \"हिन्दी (भारत)\",\n    \"languageCode\": \"hi-IN\",\n    \"Language (English name)\": \"Hindi (India)\"\n  },\n  {\n    \"Language\": \"ไทย (ประเทศไทย)\",\n    \"languageCode\": \"th-TH\",\n    \"Language (English name)\": \"Thai (Thailand)\"\n  },\n  {\n    \"Language\": \"한국어 (대한민국)\",\n    \"languageCode\": \"ko-KR\",\n    \"Language (English name)\": \"Korean (South Korea)\"\n  },\n  {\n    \"Language\": \"國語 (台灣)\",\n    \"languageCode\": \"zh-TW\",\n    \"Language (English name)\": \"Chinese, Mandarin (Traditional, Taiwan)\"\n  },\n  {\n    \"Language\": \"廣東話 (香港)\",\n    \"languageCode\": \"yue-Hant-HK\",\n    \"Language (English name)\": \"Chinese, Cantonese (Traditional, Hong Kong)\"\n  },\n  {\n    \"Language\": \"日本語（日本）\",\n    \"languageCode\": \"ja-JP\",\n    \"Language (English name)\": \"Japanese (Japan)\"\n  },\n  {\n    \"Language\": \"普通話 (香港)\",\n    \"languageCode\": \"zh-HK\",\n    \"Language (English name)\": \"Chinese, Mandarin (Simplified, Hong Kong)\"\n  },\n  {\n    \"Language\": \"普通话 (中国大陆)\",\n    \"languageCode\": \"zh\",\n    \"Language (English name)\": \"Chinese, Mandarin (Simplified, China)\"\n  }\n]\n","import React from 'react';\n\nconst LangSelect = ({language, langs, handleLangChange}) => {\n  const listOfLangs = langs.map((lang, index) =>  <option key={index} value={lang.languageCode}>{lang.Language}</option>)\n  return (\n    <div className=\"lang-select\">\n      <label htmlFor=\"langs\">Choose your language: </label>\n      <select name=\"langs\" id=\"langs\" value={language} onChange={handleLangChange}>\n        {listOfLangs}\n      </select>\n    </div>\n  )\n}\n\nexport default LangSelect;\n","import React from 'react';\nimport './Share.css';\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n  EmailIcon,\n} from 'react-share';\n\n\nconst Share = ({text}) => {\n  const shareUrl = \"https://chingu-v9-geckos-04.netlify.com\";\n  const title = text + \"\\n\";\n\n  return (\n  \n    <div className=\"Share\" name=\"share\">\n      <label htmlFor=\"share\">Share it!</label>\n      <div className=\"share-btns-cont\">\n        <div className=\"share-btn\">\n          <FacebookShareButton\n            url={shareUrl}\n            quote={title}\n            hashtag=\"voicerecognition\"\n          className=\"facebook\">\n            <FacebookIcon\n              size={48}\n            round />\n          </FacebookShareButton>\n        </div>\n\n\n        <div className=\"share-btn\">\n          <TwitterShareButton\n            url={shareUrl}\n            title={title + \"\\n\"}\n            hashtags={[\"vext\", \"chingucollabs\", \"SpeechToText\", \"VoiceRecognition\"]}\n          className=\"twitter\">\n            <TwitterIcon\n              size={48}\n            round />\n          </TwitterShareButton>\n        </div>\n\n        <div className=\"share-btn\">\n          <WhatsappShareButton\n            url={shareUrl}\n            title={title}\n            separator=\"\"\n          className=\"whatsapp\">\n            <WhatsappIcon size={48} round />\n          </WhatsappShareButton>\n        </div>\n\n        <div className=\"share-btn\">\n          <EmailShareButton\n            // url={\"\\n\" + \"Vext - Speak your mind\" + \"\\n\" + shareUrl + \"\\n\"}\n            url={`\\nVext - Speak your mind \\n${shareUrl} \\n`}\n            subject=\"New Voice Message transcribed using VEXT\"\n            body={text + \"\\n\"}\n          className=\"email\">\n            <EmailIcon\n              size={48}\n            round />\n          </EmailShareButton>\n        </div>\n        </div>\n\n\n</div>\n  \n  );\n}\n\nexport default Share;\n","import React from 'react';\nimport './App.css';\nimport Recording from './Recording';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Button from './Button';\nimport About from './About';\nimport Features from './Features';\nimport { languages } from './langs';\nimport LangSelect from './LangSelect';\nimport Share from './Share';\n\n//----------WEB SPEECH API------------------\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n// initial set up\nvar recognition = new SpeechRecognition();\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\nrecognition.maxAlternatives = 1;\n// ------------------------------------------\n\n//---------Main Component-------------------\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      textarea: \"\",\n      copied: false,\n      lang: recognition.lang,\n      live: false\n    }\n  }\n\n  handleListen = () => {\n    if (this.state.live) {\n      recognition.start();\n      recognition.onend = () => {\n      recognition.start();\n      }\n    } else {\n      recognition.stop();\n      recognition.onend = () => {\n        console.log(\"Speech recognition stopped\");\n      }\n    }\n\n    recognition.onstart = () => {\n      console.log('Speech recognition service is Running...');\n    };\n\n    recognition.onresult = (e) => {\n      const transcript = Array.from(e.results)\n      .map(result => result[0])\n      .map(result => result.transcript)\n      .join('')\n\n      if (e.results[0].isFinal) {\n        this.setState(prevState => ({textarea: prevState.textarea !== \"\" ? prevState.textarea + \"\\n\" + transcript : transcript})); //\"*** NO SPEECH RECOGNIZED ***\"\n        console.log(`You said: ${transcript}`);\n      }\n\n      // Pseudo-command\n      if (transcript.includes(\"up up down down left right left right\")) {\n        console.log(\"KONAMIIIIIIIIIIIIIIIIIIIIIIII\");\n      }\n    }\n\n  }\n\n\n  handleStart = () => {\n    this.setState({\n      live: true\n    }, this.handleListen)\n  }\n\n  handleStop = () => {\n    this.setState({\n      live: false\n    }, this.handleListen)\n  }\n\n  handleCopy = (event) => {\n    const targetTextarea = document.querySelector('.textarea');\n    if (targetTextarea.value !== \"\" ) {\n      targetTextarea.select();\n      document.execCommand('copy');\n      // event.target.focus();  //this make the focus set to the button and not the textarea (on mbile it's kinda akward..,)\n    }\n  }\n\n  handleClear = (event) => {\n    this.setState({\n      textarea: \"\"\n    })\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target;\n    this.setState(prevState => ({\n      [name]: value\n    }));\n  }\n\n  handleLangChange = (event) => {\n    this.setState({lang: event.target.value});\n    recognition.lang = event.target.value;\n    console.log(recognition.lang)\n  }\n\n  render() {\n    const {textarea, live, lang} = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <main className=\"container\">\n\n          <div className=\"col-1\"></div>\n\n          <div className=\"col-2\">\n\n            { // Record icon flash when recording starts\n              live\n                ? <Recording live={live}/>\n                : <h2 className=\"subTitle\">Speak your mind</h2>\n            }\n\n            <LangSelect langs={languages} language={lang} handleLangChange={this.handleLangChange}/>\n\n            { // toggle between record/stop buttons\n              this.state.live\n                ? <Button styles=\"stop\" title=\"Stop recording\" value=\"stop\" handleClick={this.handleStop}/>\n                : <Button styles=\"start\" title=\"Start recording\" value=\"start\" handleClick={this.handleStart}/>\n            }\n\n            <textarea className=\"textarea\" name=\"textarea\" onChange={this.handleChange} value={textarea}></textarea>\n\n            <div className=\"buttons\">\n              <Button title=\"Clear\" styles=\"btn\" handleClick={this.handleClear}/>\n              <Button  title=\"Copy text\" styles=\"btn\" handleClick={this.handleCopy}/>\n            </div>\n\n            <Share text={textarea}/>\n\n          </div>\n        </main>\n        <Features />\n        <About />\n        <Footer />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}