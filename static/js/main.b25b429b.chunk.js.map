{"version":3,"sources":["Recording.js","components/Header.js","components/Footer.js","components/Button.js","components/langs.js","components/LangSelect.js","components/App.js","serviceWorker.js","index.js"],"names":["styles","textAlign","margin","width","height","borderRadius","backgroundColor","padding","boxShadow","Recording","_ref","live","react_default","a","createElement","className","style","Header","Footer","Date","getFullYear","Button","props","value","onClick","handleClick","title","languages","Language","languageCode","Language (English name)","LangSelect","language","langs","handleLangChange","listOfLangs","map","lang","index","key","htmlFor","name","id","onChange","recognition","window","SpeechRecognition","webkitSpeechRecognition","interimResults","maxAlternatives","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleListen","state","start","onend","stop","console","log","onstart","onresult","e","transcript","Array","from","results","result","join","isFinal","setState","prevState","textarea","concat","includes","handleStart","handleStop","handleCopy","event","targetTextarea","document","querySelector","select","execCommand","handleClear","handleChange","_event$target","target","defineProperty","copied","components_Header","src_Recording","components_LangSelect","components_Button","components_Footer","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b25b429b.chunk.js","sourcesContent":["import React from 'react';\n\nconst styles = {\n  textAlign: \"center\",\n  margin: \"2em auto\",\n  width: \"1vmin\",\n  height: \"1vmin\",\n  borderRadius: \"50%\",\n  backgroundColor: \"red\",\n  padding: \"1em\",\n  boxShadow: \"inset 0 0 10px 0 #9caab2, 0 0 15px 5px red\"\n}\n\nconst Recording = ({live}) => (\n  <div className={live ? `Recording pulse` : `Recording`} style={styles}>\n\n  </div>\n);\n\nexport default Recording;\n","import React from \"react\";\nimport './Header.css';\n\nfunction Header(){\n    return(\n        <header>\n        <h1 className=\"title\">Vext</h1>\n        </header>\n    )\n}\n\n\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer (){\n    return(\n        <footer className=\"footer\">\n        <p>Copyright &copy; {new Date().getFullYear()} </p>\n        </footer>\n    )\n}\n\n\nexport default Footer;","import React from 'react';\nimport './Button.css';\n\nfunction Button(props){\n    return (\n      <button\n        value={props.value}\n        onClick={props.handleClick}\n        className={props.styles}>\n        {props.title}\n      </button>\n    );\n}\n\nexport default Button;\n","export const languages = [\n  {\n    \"Language\": \"Afrikaans (Suid-Afrika)\",\n    \"languageCode\": \"af-ZA\",\n    \"Language (English name)\": \"Afrikaans (South Africa)\"\n  },\n  {\n    \"Language\": \"አማርኛ (ኢትዮጵያ)\",\n    \"languageCode\": \"am-ET\",\n    \"Language (English name)\": \"Amharic (Ethiopia)\"\n  },\n  {\n    \"Language\": \"Հայ (Հայաստան)\",\n    \"languageCode\": \"hy-AM\",\n    \"Language (English name)\": \"Armenian (Armenia)\"\n  },\n  {\n    \"Language\": \"Azərbaycan (Azərbaycan)\",\n    \"languageCode\": \"az-AZ\",\n    \"Language (English name)\": \"Azerbaijani (Azerbaijan)\"\n  },\n  {\n    \"Language\": \"Bahasa Indonesia (Indonesia)\",\n    \"languageCode\": \"id-ID\",\n    \"Language (English name)\": \"Indonesian (Indonesia)\"\n  },\n  {\n    \"Language\": \"Bahasa Melayu (Malaysia)\",\n    \"languageCode\": \"ms-MY\",\n    \"Language (English name)\": \"Malay (Malaysia)\"\n  },\n  {\n    \"Language\": \"বাংলা (বাংলাদেশ)\",\n    \"languageCode\": \"bn-BD\",\n    \"Language (English name)\": \"Bengali (Bangladesh)\"\n  },\n  {\n    \"Language\": \"বাংলা (ভারত)\",\n    \"languageCode\": \"bn-IN\",\n    \"Language (English name)\": \"Bengali (India)\"\n  },\n  {\n    \"Language\": \"Català (Espanya)\",\n    \"languageCode\": \"ca-ES\",\n    \"Language (English name)\": \"Catalan (Spain)\"\n  },\n  {\n    \"Language\": \"Čeština (Česká republika)\",\n    \"languageCode\": \"cs-CZ\",\n    \"Language (English name)\": \"Czech (Czech Republic)\"\n  },\n  {\n    \"Language\": \"Dansk (Danmark)\",\n    \"languageCode\": \"da-DK\",\n    \"Language (English name)\": \"Danish (Denmark)\"\n  },\n  {\n    \"Language\": \"Deutsch (Deutschland)\",\n    \"languageCode\": \"de-DE\",\n    \"Language (English name)\": \"German (Germany)\"\n  },\n  {\n    \"Language\": \"English (Australia)\",\n    \"languageCode\": \"en-AU\",\n    \"Language (English name)\": \"English (Australia)\"\n  },\n  {\n    \"Language\": \"English (Canada)\",\n    \"languageCode\": \"en-CA\",\n    \"Language (English name)\": \"English (Canada)\"\n  },\n  {\n    \"Language\": \"English (Ghana)\",\n    \"languageCode\": \"en-GH\",\n    \"Language (English name)\": \"English (Ghana)\"\n  },\n  {\n    \"Language\": \"English (Great Britain)\",\n    \"languageCode\": \"en-GB\",\n    \"Language (English name)\": \"English (United Kingdom)\"\n  },\n  {\n    \"Language\": \"English (India)\",\n    \"languageCode\": \"en-IN\",\n    \"Language (English name)\": \"English (India)\"\n  },\n  {\n    \"Language\": \"English (Ireland)\",\n    \"languageCode\": \"en-IE\",\n    \"Language (English name)\": \"English (Ireland)\"\n  },\n  {\n    \"Language\": \"English (Kenya)\",\n    \"languageCode\": \"en-KE\",\n    \"Language (English name)\": \"English (Kenya)\"\n  },\n  {\n    \"Language\": \"English (New Zealand)\",\n    \"languageCode\": \"en-NZ\",\n    \"Language (English name)\": \"English (New Zealand)\"\n  },\n  {\n    \"Language\": \"English (Nigeria)\",\n    \"languageCode\": \"en-NG\",\n    \"Language (English name)\": \"English (Nigeria)\"\n  },\n  {\n    \"Language\": \"English (Philippines)\",\n    \"languageCode\": \"en-PH\",\n    \"Language (English name)\": \"English (Philippines)\"\n  },\n  {\n    \"Language\": \"English (Singapore)\",\n    \"languageCode\": \"en-SG\",\n    \"Language (English name)\": \"English (Singapore)\"\n  },\n  {\n    \"Language\": \"English (South Africa)\",\n    \"languageCode\": \"en-ZA\",\n    \"Language (English name)\": \"English (South Africa)\"\n  },\n  {\n    \"Language\": \"English (Tanzania)\",\n    \"languageCode\": \"en-TZ\",\n    \"Language (English name)\": \"English (Tanzania)\"\n  },\n  {\n    \"Language\": \"English (United States)\",\n    \"languageCode\": \"en-US\",\n    \"Language (English name)\": \"English (United States)\"\n  },\n  {\n    \"Language\": \"Español (Argentina)\",\n    \"languageCode\": \"es-AR\",\n    \"Language (English name)\": \"Spanish (Argentina)\"\n  },\n  {\n    \"Language\": \"Español (Bolivia)\",\n    \"languageCode\": \"es-BO\",\n    \"Language (English name)\": \"Spanish (Bolivia)\"\n  },\n  {\n    \"Language\": \"Español (Chile)\",\n    \"languageCode\": \"es-CL\",\n    \"Language (English name)\": \"Spanish (Chile)\"\n  },\n  {\n    \"Language\": \"Español (Colombia)\",\n    \"languageCode\": \"es-CO\",\n    \"Language (English name)\": \"Spanish (Colombia)\"\n  },\n  {\n    \"Language\": \"Español (Costa Rica)\",\n    \"languageCode\": \"es-CR\",\n    \"Language (English name)\": \"Spanish (Costa Rica)\"\n  },\n  {\n    \"Language\": \"Español (Ecuador)\",\n    \"languageCode\": \"es-EC\",\n    \"Language (English name)\": \"Spanish (Ecuador)\"\n  },\n  {\n    \"Language\": \"Español (El Salvador)\",\n    \"languageCode\": \"es-SV\",\n    \"Language (English name)\": \"Spanish (El Salvador)\"\n  },\n  {\n    \"Language\": \"Español (España)\",\n    \"languageCode\": \"es-ES\",\n    \"Language (English name)\": \"Spanish (Spain)\"\n  },\n  {\n    \"Language\": \"Español (Estados Unidos)\",\n    \"languageCode\": \"es-US\",\n    \"Language (English name)\": \"Spanish (United States)\"\n  },\n  {\n    \"Language\": \"Español (Guatemala)\",\n    \"languageCode\": \"es-GT\",\n    \"Language (English name)\": \"Spanish (Guatemala)\"\n  },\n  {\n    \"Language\": \"Español (Honduras)\",\n    \"languageCode\": \"es-HN\",\n    \"Language (English name)\": \"Spanish (Honduras)\"\n  },\n  {\n    \"Language\": \"Español (México)\",\n    \"languageCode\": \"es-MX\",\n    \"Language (English name)\": \"Spanish (Mexico)\"\n  },\n  {\n    \"Language\": \"Español (Nicaragua)\",\n    \"languageCode\": \"es-NI\",\n    \"Language (English name)\": \"Spanish (Nicaragua)\"\n  },\n  {\n    \"Language\": \"Español (Panamá)\",\n    \"languageCode\": \"es-PA\",\n    \"Language (English name)\": \"Spanish (Panama)\"\n  },\n  {\n    \"Language\": \"Español (Paraguay)\",\n    \"languageCode\": \"es-PY\",\n    \"Language (English name)\": \"Spanish (Paraguay)\"\n  },\n  {\n    \"Language\": \"Español (Perú)\",\n    \"languageCode\": \"es-PE\",\n    \"Language (English name)\": \"Spanish (Peru)\"\n  },\n  {\n    \"Language\": \"Español (Puerto Rico)\",\n    \"languageCode\": \"es-PR\",\n    \"Language (English name)\": \"Spanish (Puerto Rico)\"\n  },\n  {\n    \"Language\": \"Español (República Dominicana)\",\n    \"languageCode\": \"es-DO\",\n    \"Language (English name)\": \"Spanish (Dominican Republic)\"\n  },\n  {\n    \"Language\": \"Español (Uruguay)\",\n    \"languageCode\": \"es-UY\",\n    \"Language (English name)\": \"Spanish (Uruguay)\"\n  },\n  {\n    \"Language\": \"Español (Venezuela)\",\n    \"languageCode\": \"es-VE\",\n    \"Language (English name)\": \"Spanish (Venezuela)\"\n  },\n  {\n    \"Language\": \"Euskara (Espainia)\",\n    \"languageCode\": \"eu-ES\",\n    \"Language (English name)\": \"Basque (Spain)\"\n  },\n  {\n    \"Language\": \"Filipino (Pilipinas)\",\n    \"languageCode\": \"fil-PH\",\n    \"Language (English name)\": \"Filipino (Philippines)\"\n  },\n  {\n    \"Language\": \"Français (Canada)\",\n    \"languageCode\": \"fr-CA\",\n    \"Language (English name)\": \"French (Canada)\"\n  },\n  {\n    \"Language\": \"Français (France)\",\n    \"languageCode\": \"fr-FR\",\n    \"Language (English name)\": \"French (France)\"\n  },\n  {\n    \"Language\": \"Galego (España)\",\n    \"languageCode\": \"gl-ES\",\n    \"Language (English name)\": \"Galician (Spain)\"\n  },\n  {\n    \"Language\": \"ქართული (საქართველო)\",\n    \"languageCode\": \"ka-GE\",\n    \"Language (English name)\": \"Georgian (Georgia)\"\n  },\n  {\n    \"Language\": \"ગુજરાતી (ભારત)\",\n    \"languageCode\": \"gu-IN\",\n    \"Language (English name)\": \"Gujarati (India)\"\n  },\n  {\n    \"Language\": \"Hrvatski (Hrvatska)\",\n    \"languageCode\": \"hr-HR\",\n    \"Language (English name)\": \"Croatian (Croatia)\"\n  },\n  {\n    \"Language\": \"IsiZulu (Ningizimu Afrika)\",\n    \"languageCode\": \"zu-ZA\",\n    \"Language (English name)\": \"Zulu (South Africa)\"\n  },\n  {\n    \"Language\": \"Íslenska (Ísland)\",\n    \"languageCode\": \"is-IS\",\n    \"Language (English name)\": \"Icelandic (Iceland)\"\n  },\n  {\n    \"Language\": \"Italiano (Italia)\",\n    \"languageCode\": \"it-IT\",\n    \"Language (English name)\": \"Italian (Italy)\"\n  },\n  {\n    \"Language\": \"Jawa (Indonesia)\",\n    \"languageCode\": \"jv-ID\",\n    \"Language (English name)\": \"Javanese (Indonesia)\"\n  },\n  {\n    \"Language\": \"ಕನ್ನಡ (ಭಾರತ)\",\n    \"languageCode\": \"kn-IN\",\n    \"Language (English name)\": \"Kannada (India)\"\n  },\n  {\n    \"Language\": \"ភាសាខ្មែរ (កម្ពុជា)\",\n    \"languageCode\": \"km-KH\",\n    \"Language (English name)\": \"Khmer (Cambodia)\"\n  },\n  {\n    \"Language\": \"ລາວ (ລາວ)\",\n    \"languageCode\": \"lo-LA\",\n    \"Language (English name)\": \"Lao (Laos)\"\n  },\n  {\n    \"Language\": \"Latviešu (latviešu)\",\n    \"languageCode\": \"lv-LV\",\n    \"Language (English name)\": \"Latvian (Latvia)\"\n  },\n  {\n    \"Language\": \"Lietuvių (Lietuva)\",\n    \"languageCode\": \"lt-LT\",\n    \"Language (English name)\": \"Lithuanian (Lithuania)\"\n  },\n  {\n    \"Language\": \"Magyar (Magyarország)\",\n    \"languageCode\": \"hu-HU\",\n    \"Language (English name)\": \"Hungarian (Hungary)\"\n  },\n  {\n    \"Language\": \"മലയാളം (ഇന്ത്യ)\",\n    \"languageCode\": \"ml-IN\",\n    \"Language (English name)\": \"Malayalam (India)\"\n  },\n  {\n    \"Language\": \"मराठी (भारत)\",\n    \"languageCode\": \"mr-IN\",\n    \"Language (English name)\": \"Marathi (India)\"\n  },\n  {\n    \"Language\": \"Nederlands (Nederland)\",\n    \"languageCode\": \"nl-NL\",\n    \"Language (English name)\": \"Dutch (Netherlands)\"\n  },\n  {\n    \"Language\": \"नेपाली (नेपाल)\",\n    \"languageCode\": \"ne-NP\",\n    \"Language (English name)\": \"Nepali (Nepal)\"\n  },\n  {\n    \"Language\": \"Norsk bokmål (Norge)\",\n    \"languageCode\": \"nb-NO\",\n    \"Language (English name)\": \"Norwegian Bokmål (Norway)\"\n  },\n  {\n    \"Language\": \"Polski (Polska)\",\n    \"languageCode\": \"pl-PL\",\n    \"Language (English name)\": \"Polish (Poland)\"\n  },\n  {\n    \"Language\": \"Português (Brasil)\",\n    \"languageCode\": \"pt-BR\",\n    \"Language (English name)\": \"Portuguese (Brazil)\"\n  },\n  {\n    \"Language\": \"Português (Portugal)\",\n    \"languageCode\": \"pt-PT\",\n    \"Language (English name)\": \"Portuguese (Portugal)\"\n  },\n  {\n    \"Language\": \"Română (România)\",\n    \"languageCode\": \"ro-RO\",\n    \"Language (English name)\": \"Romanian (Romania)\"\n  },\n  {\n    \"Language\": \"සිංහල (ශ්රී ලංකාව)\",\n    \"languageCode\": \"si-LK\",\n    \"Language (English name)\": \"Sinhala (Sri Lanka)\"\n  },\n  {\n    \"Language\": \"Slovenčina (Slovensko)\",\n    \"languageCode\": \"sk-SK\",\n    \"Language (English name)\": \"Slovak (Slovakia)\"\n  },\n  {\n    \"Language\": \"Slovenščina (Slovenija)\",\n    \"languageCode\": \"sl-SI\",\n    \"Language (English name)\": \"Slovenian (Slovenia)\"\n  },\n  {\n    \"Language\": \"Urang (Indonesia)\",\n    \"languageCode\": \"su-ID\",\n    \"Language (English name)\": \"Sundanese (Indonesia)\"\n  },\n  {\n    \"Language\": \"Swahili (Tanzania)\",\n    \"languageCode\": \"sw-TZ\",\n    \"Language (English name)\": \"Swahili (Tanzania)\"\n  },\n  {\n    \"Language\": \"Swahili (Kenya)\",\n    \"languageCode\": \"sw-KE\",\n    \"Language (English name)\": \"Swahili (Kenya)\"\n  },\n  {\n    \"Language\": \"Suomi (Suomi)\",\n    \"languageCode\": \"fi-FI\",\n    \"Language (English name)\": \"Finnish (Finland)\"\n  },\n  {\n    \"Language\": \"Svenska (Sverige)\",\n    \"languageCode\": \"sv-SE\",\n    \"Language (English name)\": \"Swedish (Sweden)\"\n  },\n  {\n    \"Language\": \"தமிழ் (இந்தியா)\",\n    \"languageCode\": \"ta-IN\",\n    \"Language (English name)\": \"Tamil (India)\"\n  },\n  {\n    \"Language\": \"தமிழ் (சிங்கப்பூர்)\",\n    \"languageCode\": \"ta-SG\",\n    \"Language (English name)\": \"Tamil (Singapore)\"\n  },\n  {\n    \"Language\": \"தமிழ் (இலங்கை)\",\n    \"languageCode\": \"ta-LK\",\n    \"Language (English name)\": \"Tamil (Sri Lanka)\"\n  },\n  {\n    \"Language\": \"தமிழ் (மலேசியா)\",\n    \"languageCode\": \"ta-MY\",\n    \"Language (English name)\": \"Tamil (Malaysia)\"\n  },\n  {\n    \"Language\": \"తెలుగు (భారతదేశం)\",\n    \"languageCode\": \"te-IN\",\n    \"Language (English name)\": \"Telugu (India)\"\n  },\n  {\n    \"Language\": \"Tiếng Việt (Việt Nam)\",\n    \"languageCode\": \"vi-VN\",\n    \"Language (English name)\": \"Vietnamese (Vietnam)\"\n  },\n  {\n    \"Language\": \"Türkçe (Türkiye)\",\n    \"languageCode\": \"tr-TR\",\n    \"Language (English name)\": \"Turkish (Turkey)\"\n  },\n  {\n    \"Language\": \"اردو (پاکستان)\",\n    \"languageCode\": \"ur-PK\",\n    \"Language (English name)\": \"Urdu (Pakistan)\"\n  },\n  {\n    \"Language\": \"اردو (بھارت)\",\n    \"languageCode\": \"ur-IN\",\n    \"Language (English name)\": \"Urdu (India)\"\n  },\n  {\n    \"Language\": \"Ελληνικά (Ελλάδα)\",\n    \"languageCode\": \"el-GR\",\n    \"Language (English name)\": \"Greek (Greece)\"\n  },\n  {\n    \"Language\": \"Български (България)\",\n    \"languageCode\": \"bg-BG\",\n    \"Language (English name)\": \"Bulgarian (Bulgaria)\"\n  },\n  {\n    \"Language\": \"Русский (Россия)\",\n    \"languageCode\": \"ru-RU\",\n    \"Language (English name)\": \"Russian (Russia)\"\n  },\n  {\n    \"Language\": \"Српски (Србија)\",\n    \"languageCode\": \"sr-RS\",\n    \"Language (English name)\": \"Serbian (Serbia)\"\n  },\n  {\n    \"Language\": \"Українська (Україна)\",\n    \"languageCode\": \"uk-UA\",\n    \"Language (English name)\": \"Ukrainian (Ukraine)\"\n  },\n  {\n    \"Language\": \"עברית (ישראל)\",\n    \"languageCode\": \"he-IL\",\n    \"Language (English name)\": \"Hebrew (Israel)\"\n  },\n  {\n    \"Language\": \"العربية (إسرائيل)\",\n    \"languageCode\": \"ar-IL\",\n    \"Language (English name)\": \"Arabic (Israel)\"\n  },\n  {\n    \"Language\": \"العربية (الأردن)\",\n    \"languageCode\": \"ar-JO\",\n    \"Language (English name)\": \"Arabic (Jordan)\"\n  },\n  {\n    \"Language\": \"العربية (الإمارات)\",\n    \"languageCode\": \"ar-AE\",\n    \"Language (English name)\": \"Arabic (United Arab Emirates)\"\n  },\n  {\n    \"Language\": \"العربية (البحرين)\",\n    \"languageCode\": \"ar-BH\",\n    \"Language (English name)\": \"Arabic (Bahrain)\"\n  },\n  {\n    \"Language\": \"العربية (الجزائر)\",\n    \"languageCode\": \"ar-DZ\",\n    \"Language (English name)\": \"Arabic (Algeria)\"\n  },\n  {\n    \"Language\": \"العربية (السعودية)\",\n    \"languageCode\": \"ar-SA\",\n    \"Language (English name)\": \"Arabic (Saudi Arabia)\"\n  },\n  {\n    \"Language\": \"العربية (العراق)\",\n    \"languageCode\": \"ar-IQ\",\n    \"Language (English name)\": \"Arabic (Iraq)\"\n  },\n  {\n    \"Language\": \"العربية (الكويت)\",\n    \"languageCode\": \"ar-KW\",\n    \"Language (English name)\": \"Arabic (Kuwait)\"\n  },\n  {\n    \"Language\": \"العربية (المغرب)\",\n    \"languageCode\": \"ar-MA\",\n    \"Language (English name)\": \"Arabic (Morocco)\"\n  },\n  {\n    \"Language\": \"العربية (تونس)\",\n    \"languageCode\": \"ar-TN\",\n    \"Language (English name)\": \"Arabic (Tunisia)\"\n  },\n  {\n    \"Language\": \"العربية (عُمان)\",\n    \"languageCode\": \"ar-OM\",\n    \"Language (English name)\": \"Arabic (Oman)\"\n  },\n  {\n    \"Language\": \"العربية (فلسطين)\",\n    \"languageCode\": \"ar-PS\",\n    \"Language (English name)\": \"Arabic (State of Palestine)\"\n  },\n  {\n    \"Language\": \"العربية (قطر)\",\n    \"languageCode\": \"ar-QA\",\n    \"Language (English name)\": \"Arabic (Qatar)\"\n  },\n  {\n    \"Language\": \"العربية (لبنان)\",\n    \"languageCode\": \"ar-LB\",\n    \"Language (English name)\": \"Arabic (Lebanon)\"\n  },\n  {\n    \"Language\": \"العربية (مصر)\",\n    \"languageCode\": \"ar-EG\",\n    \"Language (English name)\": \"Arabic (Egypt)\"\n  },\n  {\n    \"Language\": \"فارسی (ایران)\",\n    \"languageCode\": \"fa-IR\",\n    \"Language (English name)\": \"Persian (Iran)\"\n  },\n  {\n    \"Language\": \"हिन्दी (भारत)\",\n    \"languageCode\": \"hi-IN\",\n    \"Language (English name)\": \"Hindi (India)\"\n  },\n  {\n    \"Language\": \"ไทย (ประเทศไทย)\",\n    \"languageCode\": \"th-TH\",\n    \"Language (English name)\": \"Thai (Thailand)\"\n  },\n  {\n    \"Language\": \"한국어 (대한민국)\",\n    \"languageCode\": \"ko-KR\",\n    \"Language (English name)\": \"Korean (South Korea)\"\n  },\n  {\n    \"Language\": \"國語 (台灣)\",\n    \"languageCode\": \"zh-TW\",\n    \"Language (English name)\": \"Chinese, Mandarin (Traditional, Taiwan)\"\n  },\n  {\n    \"Language\": \"廣東話 (香港)\",\n    \"languageCode\": \"yue-Hant-HK\",\n    \"Language (English name)\": \"Chinese, Cantonese (Traditional, Hong Kong)\"\n  },\n  {\n    \"Language\": \"日本語（日本）\",\n    \"languageCode\": \"ja-JP\",\n    \"Language (English name)\": \"Japanese (Japan)\"\n  },\n  {\n    \"Language\": \"普通話 (香港)\",\n    \"languageCode\": \"zh-HK\",\n    \"Language (English name)\": \"Chinese, Mandarin (Simplified, Hong Kong)\"\n  },\n  {\n    \"Language\": \"普通话 (中国大陆)\",\n    \"languageCode\": \"zh\",\n    \"Language (English name)\": \"Chinese, Mandarin (Simplified, China)\"\n  }\n]\n","import React from 'react';\n\nconst LangSelect = ({language, langs, handleLangChange}) => {\n  const listOfLangs = langs.map((lang, index) =>  <option key={index} value={lang.languageCode}>{lang.Language}</option>)\n  return (\n    <div className=\"langSelect\">\n      <label htmlFor=\"langs\">Choose your language: </label>\n      <select name=\"langs\" id=\"langs\" value={language} onChange={handleLangChange}>\n        {listOfLangs}\n      </select>\n    </div>\n  )\n}\n\nexport default LangSelect;\n","import React from 'react';\nimport './App.css';\nimport Recording from '../Recording.js';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Button from './Button';\nimport { languages } from './langs';\nimport LangSelect from './LangSelect';\n\n//----------WEB SPEECH API------------------\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n// initial set up\nvar recognition = new SpeechRecognition();\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\nrecognition.maxAlternatives = 1;\n// ------------------------------------------\n\n//---------Main Component-------------------\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      textarea: \"\",\n      copied: false,\n      lang: recognition.lang,\n      live: false\n    }\n  }\n\n  handleListen = () => {\n    if (this.state.live) {\n      recognition.start();\n      recognition.onend = () => {\n      recognition.start();\n      }\n    } else {\n      recognition.stop();\n      recognition.onend = () => {\n        console.log(\"Speech recognition stopped\");\n      }\n    }\n\n    recognition.onstart = () => {\n      console.log('Speech recognition service is Running...');\n    };\n\n    recognition.onresult = (e) => {\n      const transcript = Array.from(e.results)\n      .map(result => result[0])\n      .map(result => result.transcript)\n      .join('')\n\n      if (e.results[0].isFinal) {\n        this.setState(prevState => ({textarea: prevState.textarea !== \"\" ? prevState.textarea + \"\\n\" + transcript : transcript})); //\"*** NO SPEECH RECOGNIZED ***\"\n        console.log(`You said: ${transcript}`);\n      }\n\n      // Pseudo-command\n      if (transcript.includes(\"up up down down left right left right\")) {\n        console.log(\"KONAMIIIIIIIIIIIIIIIIIIIIIIII\");\n      }\n    }\n\n  }\n\n\n  handleStart = () => {\n    this.setState({\n      live: true\n    }, this.handleListen)\n  }\n\n  handleStop = () => {\n    this.setState({\n      live: false\n    }, this.handleListen)\n  }\n\n  handleCopy = (event) => {\n    const targetTextarea = document.querySelector('.textarea');\n    if (targetTextarea.value !== \"\" ) {\n      targetTextarea.select();\n      document.execCommand('copy');\n      // event.target.focus();  //this make the focus set to the button and not the textarea (on mbile it's kinda akward..,)\n    }\n  }\n\n  handleClear = (event) => {\n    this.setState({\n      textarea: \"\"\n    })\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target;\n    this.setState(prevState => ({\n      [name]: value\n    }));\n  }\n\n  handleLangChange = (event) => {\n    this.setState({lang: event.target.value});\n    recognition.lang = event.target.value;\n    console.log(recognition.lang)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <main className=\"container\">\n\n          <div className=\"col-1\"></div>\n\n          <div className=\"col-2\">\n\n            {\n              this.state.live\n                ? <Recording live={this.state.live}/>\n                : <h2 className=\"subTitle\">Speak your mind</h2>\n            }\n            \n               <LangSelect langs={languages} language={this.state.lang} handleLangChange={this.handleLangChange}/>\n              {this.state.live\n                ? <Button styles=\"stop\" title=\"Stop recording\" value=\"stop\" handleClick={this.handleStop}/>\n                : <Button styles=\"start\" title=\"Start recording\" value=\"start\" handleClick={this.handleStart}/>\n            }\n\n            <textarea className=\"textarea\" name=\"textarea\" onChange={this.handleChange} value={this.state.textarea}></textarea>\n\n            <div className=\"buttons\">\n              <Button title=\"Clear\" styles=\"btn\" handleClick={this.handleClear}/>\n              <Button  title=\"Copy text\" styles=\"btn\" handleClick={this.handleCopy}/>\n            </div>\n\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}